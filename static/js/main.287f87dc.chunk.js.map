{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","image","calories","directions","ingredients","className","style","recipe","src","alt","map","ingredient","text","href","target","rel","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","placeholder","label","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAmBeA,EAhBA,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,MAAiBC,GAAoC,EAA9CC,SAA8C,EAApCD,OAAOE,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YAEjD,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKP,IACL,qBAAKK,UAAWC,IAAMC,OAAQC,IAAKP,EAAOQ,IAAI,KAC9C,6BACKL,EAAYM,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGvB,mBAAGC,KAAMV,EAAYW,OAAO,SAASC,IAAI,aAAzC,wBCiDEC,EA3DH,WAEV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,UAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,uDAAD,OAAwDL,EAAxD,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBhB,OACE,sBAAK1B,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,uBAAM2B,SATQ,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAMmBhB,UAAU,cAArC,UACI,uBACAA,UAAU,aACV8B,KAAK,OACLC,MAAOhB,EACPiB,SAlBa,SAAAJ,GACjBZ,EAAUY,EAAEnB,OAAOsB,QAkBfE,YAAY,kBAEZ,wBAAQjC,UAAU,gBAAgB8B,KAAK,SAAvC,uBAIJ,qBAAK9B,UAAU,UAAf,SACCa,EAAQR,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CACAP,MAAOO,EAAOA,OAAOgC,MACrBrC,SAAUK,EAAOA,OAAOL,SACxBD,MAAOM,EAAOA,OAAON,MACrBE,WAAYI,EAAOA,OAAOiC,IAC1BpC,YAAaG,EAAOA,OAAOH,uBC3CpBqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.287f87dc.chunk.js","sourcesContent":["import React from 'react';\nimport style from './recipe.module.css';\n\nconst Recipe = ({title, calories, image, directions, ingredients}) => {\n\n    return (\n        <div className={style.recipe}>\n            <h1>{title}</h1>\n            <img className={style.recipe} src={image} alt=\"\" />  \n            <ol>\n                {ingredients.map(ingredient => (\n                    <li>{ingredient.text}</li>\n                ))}\n            </ol>\n             <a href={directions} target=\"_blank\" rel=\"noreferrer\">Recipe</a>\n        </div>\n    );\n}\n\nexport default Recipe;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App = () => {\n\n  const APP_ID = \"ea378905\";\n  const APP_KEY = \"78d3c0ecbfdf7ddd4abeceed7e935b44\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"random\");\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n      setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault(); \n    setQuery(search);\n    setSearch('')\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className='title'>RecipeFinder</h1>\n      <form onSubmit={getSearch} className=\"search-form\">\n          <input \n          className=\"search-bar\" \n          type=\"text\" \n          value={search} \n          onChange={updateSearch}\n          placeholder=\"Find a Recipe\"\n          />\n          <button className=\"search-button\" type=\"submit\">\n            Search\n          </button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n        <Recipe \n        title={recipe.recipe.label} \n        calories={recipe.recipe.calories}\n        image={recipe.recipe.image}\n        directions={recipe.recipe.url}\n        ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\"};"],"sourceRoot":""}